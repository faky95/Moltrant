<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class InscriptionEnabler extends \App\Entity\InscriptionEnabler implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'id', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'fonctionActuelle', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'experienceProfessionnelle', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'heure', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'utilisateur', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'precisions', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'dateInscription', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'specialite', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'secteur', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'stadeDeveloppement'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'id', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'fonctionActuelle', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'experienceProfessionnelle', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'heure', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'utilisateur', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'precisions', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'dateInscription', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'specialite', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'secteur', '' . "\0" . 'App\\Entity\\InscriptionEnabler' . "\0" . 'stadeDeveloppement'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (InscriptionEnabler $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getFonctionActuelle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFonctionActuelle', []);

        return parent::getFonctionActuelle();
    }

    /**
     * {@inheritDoc}
     */
    public function setFonctionActuelle(?string $fonctionActuelle): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFonctionActuelle', [$fonctionActuelle]);

        return parent::setFonctionActuelle($fonctionActuelle);
    }

    /**
     * {@inheritDoc}
     */
    public function getExperienceProfessionnelle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExperienceProfessionnelle', []);

        return parent::getExperienceProfessionnelle();
    }

    /**
     * {@inheritDoc}
     */
    public function setExperienceProfessionnelle(?string $experienceProfessionnelle): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExperienceProfessionnelle', [$experienceProfessionnelle]);

        return parent::setExperienceProfessionnelle($experienceProfessionnelle);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeure(): ?\App\Entity\Heure
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeure', []);

        return parent::getHeure();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeure(?\App\Entity\Heure $heure): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeure', [$heure]);

        return parent::setHeure($heure);
    }

    /**
     * {@inheritDoc}
     */
    public function getUtilisateur(): ?\App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUtilisateur', []);

        return parent::getUtilisateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setUtilisateur(?\App\Entity\Utilisateur $utilisateur): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUtilisateur', [$utilisateur]);

        return parent::setUtilisateur($utilisateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrecisions(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrecisions', []);

        return parent::getPrecisions();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrecisions(?string $precisions): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrecisions', [$precisions]);

        return parent::setPrecisions($precisions);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateInscription(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateInscription', []);

        return parent::getDateInscription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateInscription(\DateTimeInterface $dateInscription): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateInscription', [$dateInscription]);

        return parent::setDateInscription($dateInscription);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpecialite(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpecialite', []);

        return parent::getSpecialite();
    }

    /**
     * {@inheritDoc}
     */
    public function addSpecialite(\App\Entity\Specialite $specialite): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSpecialite', [$specialite]);

        return parent::addSpecialite($specialite);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSpecialite(\App\Entity\Specialite $specialite): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSpecialite', [$specialite]);

        return parent::removeSpecialite($specialite);
    }

    /**
     * {@inheritDoc}
     */
    public function getSecteur(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSecteur', []);

        return parent::getSecteur();
    }

    /**
     * {@inheritDoc}
     */
    public function addSecteur(\App\Entity\SecteurActivite $secteur): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSecteur', [$secteur]);

        return parent::addSecteur($secteur);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSecteur(\App\Entity\SecteurActivite $secteur): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSecteur', [$secteur]);

        return parent::removeSecteur($secteur);
    }

    /**
     * {@inheritDoc}
     */
    public function getStadeDeveloppement(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStadeDeveloppement', []);

        return parent::getStadeDeveloppement();
    }

    /**
     * {@inheritDoc}
     */
    public function addStadeDeveloppement(\App\Entity\StadeDeveloppement $stadeDeveloppement): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStadeDeveloppement', [$stadeDeveloppement]);

        return parent::addStadeDeveloppement($stadeDeveloppement);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStadeDeveloppement(\App\Entity\StadeDeveloppement $stadeDeveloppement): \App\Entity\InscriptionEnabler
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStadeDeveloppement', [$stadeDeveloppement]);

        return parent::removeStadeDeveloppement($stadeDeveloppement);
    }

}
